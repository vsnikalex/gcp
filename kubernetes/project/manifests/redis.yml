apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-master
  template:
    metadata:
      labels:
        app: redis-master
    spec:
      containers:
      - name: redis
        image: redis:5.0.4
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
            ephemeral-storage: "128M"
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        ports:
        - containerPort: 6379
      volumes:
      - name: data
        emptyDir: {}
      automountServiceAccountToken: false

---

apiVersion: v1
kind: Service
metadata:
  name: redis-master
spec:
  selector:
    app: redis-master
  ports:
  - port: 6379
    targetPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-slave
  template:
    metadata:
      labels:
        app: redis-slave
    spec:
      containers:
      - name: redis
        image: redis:5.0.4
        command: ["redis-server"]
        args: ["--slaveof", "$(REDIS_MASTER_HOST)", "6379"]
        env:
        - name: REDIS_MASTER_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_MASTER_HOST
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
            ephemeral-storage: "128M"
        volumeMounts:
        - name: data
          mountPath: /redis-slave-data
        ports:
        - containerPort: 6379
      volumes:
      - name: data
        emptyDir: {}
      automountServiceAccountToken: false

---

apiVersion: v1
kind: Service
metadata:
  name: redis-slave
spec:
  selector:
    app: redis-slave
  ports:
  - port: 6379
    targetPort: 6379
